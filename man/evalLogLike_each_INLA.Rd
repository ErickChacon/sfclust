% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/within_clust_model.R
\name{evalLogLike_each_INLA}
\alias{evalLogLike_each_INLA}
\title{Evaluate Log-Likelihood for Each Group in INLA}
\usage{
evalLogLike_each_INLA(
  k,
  Y,
  X,
  inla.extra,
  membership,
  formula,
  detailed = FALSE,
  correction = T
)
}
\arguments{
\item{k}{integer, specifying the group index to compute.}

\item{Y}{A ns by nt numeric matrix, containing the response matrix.}

\item{X}{A numeric matrix, the inverse discrete wavelet transform matrix used in the model.}

\item{inla.extra}{A list of within cluster model, the model type, and related parameters}

\item{membership}{integer vector, indicating the membership of each observation in \code{Y}.}

\item{formula}{an object of class \code{\link[stats]{formula}}, defining the model to be fit.}

\item{detailed}{logical, indicating whether to return a detailed output including
full INLA object (\code{TRUE}) or just the computed marginal likelihood (\code{FALSE}).}

\item{correction}{logical, if a correction should be applied when computing marginal loglikelihood, for more details, please see inla.doc("rw1")}
}
\value{
If \code{detailed} is TRUE, returns the full INLA object; otherwise, returns
a numeric value of the marginal likelihood.
}
\description{
This function computes the log-likelihood for each group based on the membership
indicator using the Integrated Nested Laplace Approximation (INLA) approach.
It allows flexible definition of the model formula and can be customized
to include detailed output or just the marginal likelihood.
}
\examples{
\dontrun{# Define data matrices and parameters
Y <- matrix(rpois(100, lambda = 10), ncol=10)
population <- matrix(rpois(100, lambda = 5), ncol=10)
inla.extra <- list(family = "poisson", N = population)
membership <- sample(1:2, 10, replace=TRUE)
X <- seq(0,1, length.out = 10)
a0 <- 0.1; b0 <- 0.1

# Define a formula, the name of the iid random effec should be idx
formula <- Yk ~ 1 + COV + f(idx, model = 'iid',
                 hyper = list(prec = list(prior = "loggamma", param = c(a0, b0))))
formula <- Yk ~ 1 + COV + f(idx, model = 'iid',hyper = list(prec = list(prior = "loggamma", param = c(a0, b0))))
formula= Yk~ 1  +f(COV, model = "rw1", scale.model = TRUE,hyper = list(theta = list(prior="pc.prec", param=c(1,0.01))))+
f(idx, model = 'iid',hyper = list(prec = list(prior = "loggamma", param = c(a0, b0))))
formula= Yk~ 1  + f(ids,model="iid",group=idt, control.group=list(model="ar1"),hyper = list(prec = list(prior = "loggamma", param = c(a0, b0))))
# Call the function
result <- evalLogLike_each_INLA(1, Y, X, inla.extra, membership, custom_formula, TRUE)
}
}
